import shelve, dbm

# Конференція:
# - з комерційних питань:...;
# - з розвитку: ...;
# - наукова:...:

# Крок 1. Створити клас, який містить конструктор класу; на основі
# класу створити декілька об‘єктів.
# Крок 2. Додати методи, які визначають поведінку об‘єктів.
# Крок 3. Перевантаження операторів.
# Крок 4. Адаптація поведінки за допомогою підкласів. Визначити
# відношення «суперклас/підклас», додати підклас, який адаптує поведінку
# суперкласу або/і містить унікальні методи, відсутні в суперкласі (один метод
# перевизначає метод суперкласу, адаптуючи його, інший метод є новим
# доповненням до підкласу).
# Крок 5. Адаптація конструкторів (додати адаптований конструктор в
# підклас).
# Крок 6. Збереження об'єктів в базі даних (модулі shelve і dbm).
# Дослідження сховища в інтерактивному сеансі.

# Базовий клас для конференції
# Файл conference_manager.py

import shelve
import dbm

class Conference:
    def __init__(self, name, topic):
        self.name = name
        self.topic = topic

    def __str__(self):
        return f"Конференція '{self.name}' присвячена темі: {self.topic}."

    def info(self):
        return f"Конференція '{self.name}' стосується {self.topic}."

conferences = [
    Conference("Конференція з комерційних питань", "економіки та бізнесу"),
    Conference("Конференція з розвитку", "інновацій та перспектив"),
    Conference("Наукова конференція", "досліджень та відкриттів")
]

with shelve.open('conferences_db', flag='c') as db:
    for conf in conferences:
        db[conf.name] = conf

if __name__ == '__main__':
    with shelve.open('conferences_db', flag='r') as db:
        for key in db:
            print(db[key].info())

